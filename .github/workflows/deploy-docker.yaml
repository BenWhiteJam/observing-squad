env:
  REGISTRY_HOSTNAME: multiversx

name: Build Docker images & push

on:
  release:
    types: [published]
  push:
    branches: [ master, development, feat/*, rc/* ]
  pull_request:
    branches: [ master, development, feat/*, rc/* ]

jobs:
  build-docker-images:
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Import environment variables from a file
        shell: bash
        run: cat ${GITHUB_WORKSPACE}/mainnet/.env >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push node image
        uses: docker/build-push-action@v5
        with:
          context: ./mainnet
          file: ./mainnet/chain-observer
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'release' && github.event.action == 'published' }}
          tags: |
            ${{ env.REGISTRY_HOSTNAME }}/${{ env.OBSERVER_IMAGE }}

      - name: Build and push proxy image
        uses: docker/build-push-action@v5
        with:
          context: ./mainnet
          file: ./mainnet/chain-proxy
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'release' && github.event.action == 'published' }}
          tags: |
            ${{ env.REGISTRY_HOSTNAME }}/${{ env.PROXY_IMAGE }}
